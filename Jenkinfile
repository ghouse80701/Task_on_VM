pipeline {
    agent any

    stages {
        stage('Pull Code') {
            steps {
                // Pull the latest code from the repository
                git 'https://github.com/ghouse80701/Task_on_VM.git'
            }
        }

        stage('Build Code') {
            steps {
                script {
                    // Build the React frontend
                    sh 'cd frontend && npm install'
                    sh 'cd frontend && npm run build'
                }
            }
        }
        
        stage('Package Artifacts') {
            steps {
                script {
                    // Copy frontend artifacts
                    sh 'mkdir -p /opt/frontend'
                    sh 'cp -R /var/lib/jenkins/workspace/Task_on_VM/frontend/* /opt/frontend/'
                    
                    // Copy backend artifacts
                    sh 'mkdir -p /opt/BackEnd'
                    sh 'cp -R /var/lib/jenkins/workspace/Task_on_VM/BackEnd/* /opt/BackEnd/'
                }
            }
        }
        
        stage('Delete the Server') {
            steps {
                script {
                    // Try to delete the servers, and if it fails, just log the error
                     try {
                         sh 'cd /opt/BackEnd && pm2 delete index'
                         sh 'cd /opt/frontend && pm2 delete static-page-server-3000'
                        } catch (Exception e) {
                         echo "Error deleting servers: ${e}"
                    }
                }
            }
        }
        
        stage('Start BackEnd Server') {
            steps {
                script {
                    sh 'cd /opt/BackEnd && npm install'
                    sh 'cd /opt/BackEnd && pm2 start index.js -f'
                }
            }
        }
        
        stage('Start frontend Server') {
            steps {
                script {
                    sh 'cd /opt/frontend && pm2 serve build 3000 -f'
                    sh 'cd /opt/frontend && pm2 save'
                }
            }
        }
    }
}
